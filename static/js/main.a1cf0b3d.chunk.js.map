{"version":3,"sources":["constants/Constants.js","slices/apiRoot.js","components/CustomMessage.js","slices/questList.js","components/GridOfQuestions.js","pages/ListOfQuestions.js","pages/LandingPage.js","components/Navbar.js","slices/quest.js","components/Question.js","pages/SingleQuestion.js","pages/SearchQuestion.js","pages/CreateQuestion.js","App.js","slices/index.js","index.js"],"names":["Constants","url","links","GitHub","LinkedIn","HackerRank","CodeSignal","constants","apiRootSlice","createSlice","name","initialState","loading","hasErrors","apiRoot","reducers","getApiRoot","state","getApiRootSuccess","payload","domain","getUrl","getApiRootFailure","actions","apiRootSelector","CustomMessage","props","Grid","container","item","xs","Box","bgcolor","color","p","title","message","questListSlice","questList","getQuestList","getQuestListEmpty","isEmpty","getQuestListSuccess","getQuestListFailure","questListSelector","GridOfQuestions","map","quest","index","key","QuestionMainInfo","md","QuestionText","description","value","question","formatDate","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","Question","useState","showQuestions","questionState","setQuestionState","updateQuestionState","currentShowQuestions","s","b","split","Date","UTC","parseISOString","published_at","marginBottom","marginTop","padding","className","alignItems","Button","variant","to","Choices","choices","onClick","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","choice","votes","ListOFQuestions","dispatch","useDispatch","useSelector","useEffect","endPoint","questions_url","a","fetch","response","json","data","length","CircularProgress","LandingPage","href","target","rel","NavBar","justify","questSlice","getQuest","getQuestSuccess","getQuestFailure","questSelector","fetchQuest","QuestionInfo","info","voteForChoice","undefined","style","SingleQuestion","match","id","params","vote","urlRequest","method","then","SearchQuestion","idQuestion","searchQuestion","setSearchQueston","TextField","label","type","onChange","event","disabled","CreateQuestionInput","FormControl","fullWidth","InputLabel","htmlFor","OutlinedInput","startAdornment","InputAdornment","position","textAdornment","labelWidth","handleInputChange","CreateQuestion","disabledSubmit","submit","createQuestion","setCreateQuestion","editValue","valueDisabled","paddingX","element","paddingTop","display","justifyContent","body","JSON","stringify","App","Container","exact","path","component","rootReducer","combineReducers","apiRootReducer","questListReducer","questReducer","store","configureStore","reducer","render","document","getElementById"],"mappings":"2VAAqBA,E,iGAEjB,MAAO,CACLC,IAAK,oC,uCAIP,MAAO,CACLC,MAAO,CACLC,OAAQ,iCACRC,SAAU,iDACVC,WAAY,iDACZC,WAAY,kD,0CAKhB,MAAO,CACLJ,MAAO,CACL,yBAA0B,gCAC1B,uBAAwB,0B,KCjB1BK,EAAY,IAAIP,EAQhBQ,EAAeC,YAAY,CAC/BC,KAAM,UACNC,aAR0B,CAC1BC,SAAS,EACTC,WAAW,EACXC,QAAS,IAMTC,SAAU,CACRC,WAAY,SAAAC,GACVA,EAAML,SAAU,GAElBM,kBAAmB,SAACD,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QAC3BF,EAAMH,QAAUK,EAChBF,EAAML,SAAU,EAChBK,EAAMJ,WAAY,EAClBI,EAAMG,OAASb,EAAUc,SAASpB,KAEpCqB,kBAAmB,SAAAL,GACjBA,EAAML,SAAU,EAChBK,EAAMJ,WAAY,M,EASpBL,EAAae,QAHfP,E,EAAAA,WACAE,E,EAAAA,kBACAI,E,EAAAA,kBAEWE,EAAkB,SAAAP,GAAK,OAAIA,EAAMH,SAC/BN,IAAf,Q,wDClCe,SAASiB,EAAcC,GACpC,OACE,kBAACC,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CACEC,QAASN,EAAMO,MAAQ,QACvBA,MAAOP,EAAMO,MAAQ,gBACrBC,EAAG,GAEH,2BACE,8BAAOR,EAAMS,OACZT,EAAMU,YCZZ,IAMDC,EAAiB5B,YAAY,CACjCC,KAAM,YACNC,aAR0B,CAC1BC,SAAS,EACTC,WAAW,EACXyB,UAAW,IAMXvB,SAAU,CACRwB,aAAc,SAAAtB,GACZA,EAAML,SAAU,GAElB4B,kBAAmB,SAAAvB,GACjBA,EAAMwB,SAAU,EAChBxB,EAAML,SAAU,EAChBK,EAAMJ,WAAY,GAEpB6B,oBAAqB,SAACzB,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QAC7BF,EAAMqB,UAAYnB,EAClBF,EAAMwB,SAAU,EAChBxB,EAAML,SAAU,EAChBK,EAAMJ,WAAY,GAEpB8B,oBAAqB,SAAA1B,GACnBA,EAAML,SAAU,EAChBK,EAAMJ,WAAY,M,EAUpBwB,EAAed,QAJjBgB,E,EAAAA,aACAC,E,EAAAA,kBACAE,E,EAAAA,oBACAC,E,EAAAA,oBAEWC,EAAoB,SAAA3B,GAAK,OAAIA,EAAMqB,WACjCD,IAAf,Q,mFC7Be,SAASQ,EAAgBnB,GAAQ,IACtCY,EAAcZ,EAAdY,UAER,OACE,kBAACX,EAAA,EAAD,CAAMC,WAAS,GACZU,EAAUQ,KAAI,SAACC,EAAOC,GAAR,OACb,kBAACrB,EAAA,EAAD,CAAME,MAAI,EAACoB,IAAKD,EAAOlB,GAAI,IACzB,kBAAC,EAAaiB,QAOxB,IAAMG,EAAmB,SAAAxB,GAAK,OAC5B,kBAACC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIqB,GAAI,GACrB,kBAACC,EAAD,CACEC,YAAa,WACbC,MAAO5B,EAAM6B,WAEf,kBAACH,EAAD,CACEC,YAAa,OACbC,MACE5B,EAAM8B,WAAWC,UACjB,KACC/B,EAAM8B,WAAWE,WAAa,GAC/B,IACAhC,EAAM8B,WAAWG,cACjB,IACAjC,EAAM8B,WAAWI,WACjB,IACAlC,EAAM8B,WAAWK,aACjB,IACAnC,EAAM8B,WAAWM,iBAMnBC,EAAW,SAAArC,GACf,IADwB,EAIkBsC,mBAHb,CAC3BC,eAAe,IAFO,mBAIjBC,EAJiB,KAIFC,EAJE,KAMlBC,EAAsB,SAAAC,GAC1BF,EAAiB,CACfF,cAAeI,KASbb,EALiB,SAAAc,GACrB,IAAIC,EAAID,EAAEE,MAAM,OAChB,OAAO,IAAIC,KAAKA,KAAKC,IAAIH,EAAE,KAAMA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,KAGhDI,CAAejD,EAAMkD,cAExC,OACE,kBAAC7C,EAAA,EAAD,CAAK8C,aAAc,EAAGC,UAAW,EAAGC,QAAS,EAAGC,UAAU,YACxD,kBAACrD,EAAA,EAAD,CAAMC,WAAS,GACb,kBAAC,EAAD,CAAkB4B,WAAYA,EAAYD,SAAU7B,EAAM6B,WAC1D,kBAAC5B,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACC,GAAI,GAAIqB,GAAI,EAAG8B,WAAW,UAC7C,kBAACC,EAAA,EAAD,CAAQC,QAAQ,WAAWlD,MAAM,WAC/B,kBAAC,IAAD,CAAM+C,UAAU,oBAAoBI,GAAI1D,EAAMzB,KAA9C,4BAMLiE,EAAcD,cACb,kBAAClC,EAAA,EAAD,KACE,kBAACqB,EAAD,CAAcC,YAAa,UAAWC,MAAO,KAC7C,kBAAC+B,EAAD,CAASC,QAAS5D,EAAM4D,UACxB,kBAACvD,EAAA,EAAD,CAAK+C,UAAW,GACd,uBACEE,UAAU,iBACVO,QAAS,kBAAMnB,GAAoB,KAFrC,gBAIe,0BAAMY,UAAU,yBAAhB,UAKnB,kBAACjD,EAAA,EAAD,KACE,uBACEiD,UAAU,iBACVO,QAAS,kBAAMnB,GAAoB,KAFrC,gBAIe,0BAAMY,UAAU,yBAAhB,WAQzB,SAASK,EAAQ3D,GACf,OACE,kBAACK,EAAA,EAAD,CAAKiD,UAAU,qBACb,kBAACQ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,eACA,kBAACA,EAAA,EAAD,gBAGJ,kBAACC,EAAA,EAAD,KACGnE,EAAM4D,QAAQxC,KAAI,SAACgD,EAAQ9C,GAAT,OACjB,kBAAC2C,EAAA,EAAD,CAAU1C,IAAKD,GACb,kBAAC4C,EAAA,EAAD,KAAYE,EAAOA,QACnB,kBAACF,EAAA,EAAD,KAAYE,EAAOC,eAUnC,SAAS3C,EAAa1B,GACpB,OACE,2BACE,0BAAMsD,UAAU,mBACd,0BAAMA,UAAU,gCACbtD,EAAM2B,YADT,KAGA,0BAAM2B,UAAU,0BAA0BtD,EAAM4B,SCpIzC,SAAS0C,IACtB,IAAMC,EAAWC,cADuB,EAEWC,YACjDvD,GADMN,EAFgC,EAEhCA,UAAW1B,EAFqB,EAErBA,QAAS6B,EAFY,EAEZA,QAAS5B,EAFG,EAEHA,UAFG,EAMZsF,YAAY3E,GAAhCV,EANgC,EAMhCA,QAASM,EANuB,EAMvBA,OAEjBgF,qBAAU,WF0BL,IAAwBC,EEzB3BJ,GFyB2BI,EExBV,GAAD,OAAIjF,GAAJ,OAAaN,EAAQwF,eFyBvC,uCAAO,WAAML,GAAN,iBAAAM,EAAA,6DACLN,EAAS1D,KADJ,kBAIoBiE,MAAMH,GAJ1B,cAIGI,EAJH,gBAKgBA,EAASC,OALzB,cAKGC,EALH,iBAMIA,EAAKC,OANT,8BAMmB,GANnB,iBAOCX,EAASvD,EAAoBiE,IAP9B,wBAQCV,EAASzD,KARV,0DAUHyD,EAAStD,KAVN,0DAAP,0DEvBG,CAACsD,IAwBJ,OAAO,6BArBDrF,EAAgB,kBAACiG,EAAA,EAAD,MAChBhG,EAEA,kBAACY,EAAD,CACEU,MAAM,QACNC,QAAQ,uDACRH,MAAM,UAGRQ,EAEA,kBAAChB,EAAD,CACEU,MAAM,OACNC,QAAQ,uDACRH,MAAM,SAIL,kBAACY,EAAD,CAAiBP,UAAWA,K,MCrCxB,SAASwE,IACtB,OACE,kBAACnF,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIqB,GAAI,GACrB,kBAACpB,EAAA,EAAD,CAAKgD,QAAS,GACZ,uBAAGC,UAAU,sBAAb,gCACA,uBAAGA,UAAU,yBAAb,oGAIA,uBAAGA,UAAU,4BAAb,0EAKJ,kBAACrD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIqB,GAAI,GACrB,kBAACpB,EAAA,EAAD,CAAKgD,QAAS,GACZ,yBAAKC,UAAU,cACb,uBAAGA,UAAU,8BAAb,gBACA,uBAAGA,UAAU,8BAAb,qCAGA,kBAACjD,EAAA,EAAD,KACE,2BACE,uBACEgF,KAAK,iDACLC,OAAO,SACPC,IAAI,uBAHN,aAQF,2BACE,uBACEF,KAAK,iCACLC,OAAO,SACPC,IAAI,uBAHN,WAQF,2BACE,uBACEF,KAAK,iDACLC,OAAO,SACPC,IAAI,uBAHN,WAQF,2BACE,uBACEF,KAAK,iDACLC,OAAO,SACPC,IAAI,uBAHN,sB,MClDD,SAASC,IACtB,OACE,kBAACnF,EAAA,EAAD,KACE,kBAACJ,EAAA,EAAD,CAAMC,WAAS,EAACuF,QAAQ,gBACtB,kBAACxF,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIqB,GAAI,EAAG6B,UAAU,UAClC,kBAACjD,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMqD,GAAG,KAAT,kBAGJ,kBAACzD,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,GACJqB,GAAI,EACJ6B,UAAU,gBAEV,kBAAC,IAAD,CAAMI,GAAG,cAAT,sBAEF,kBAACzD,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,GACJqB,GAAI,EACJ6B,UAAU,gBAEV,kBAAC,IAAD,CAAMI,GAAG,mBAAT,mBAEF,kBAACzD,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,GACJqB,GAAI,EACJ6B,UAAU,gBAEV,kBAAC,IAAD,CAAMI,GAAG,mBAAT,kBAGJ,wBAAIJ,UAAU,kBCrCb,IAMDoC,EAAa3G,YAAY,CAC7BC,KAAM,QACNC,aAR0B,CAC1BC,SAAS,EACTC,WAAW,EACX0C,SAAU,IAMVxC,SAAU,CACRsG,SAAU,SAAApG,GACRA,EAAML,SAAU,GAElB0G,gBAAiB,SAACrG,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QACzBF,EAAMsC,SAAWpC,EACjBF,EAAML,SAAU,EAChBK,EAAMJ,WAAY,GAEpB0G,gBAAiB,SAAAtG,GACfA,EAAML,SAAU,EAChBK,EAAMJ,WAAY,M,GASpBuG,EAAW7F,QAHb8F,G,GAAAA,SACAC,G,GAAAA,gBACAC,G,GAAAA,gBAEWC,GAAgB,SAAAvG,GAAK,OAAIA,EAAM8B,OAC7BqE,KAAf,QAEO,SAASK,GAAWpB,GACzB,8CAAO,WAAMJ,GAAN,iBAAAM,EAAA,6DACLN,EAASoB,MADJ,kBAGoBb,MAAMH,GAH1B,cAGGI,EAHH,gBAIgBA,EAASC,OAJzB,OAIGC,EAJH,OAKHV,EAASqB,GAAgBX,IALtB,kDAOHV,EAASsB,MAPN,0DAAP,sD,UC1BIG,GAAe,SAAAhG,GAAK,OACxB,6BACE,0BACEsD,UAAU,yBAETtD,EAAMS,MAHT,KAKA,uBAAG6C,UAAU,4BACVtD,EAAMiG,QAKE,SAAS5D,GAASrC,GAAQ,IAC/B6B,EAAmD7B,EAAnD6B,SAAUqB,EAAyClD,EAAzCkD,aAAcU,EAA2B5D,EAA3B4D,QAASsC,EAAkBlG,EAAlBkG,cAQnCpE,EANiB,SAAAc,GACrB,QAAUuD,IAANvD,EAAiB,OAAO,IAAIG,KAChC,IAAIF,EAAID,EAAEE,MAAM,OAChB,OAAO,IAAIC,KAAKA,KAAKC,IAAIH,EAAE,KAAMA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,KAGhDI,CAAeC,GAElC,OACE,kBAACjD,EAAA,EAAD,CAAMC,WAAS,EAACkG,MAAO,CAAEhD,UAAW,QAClC,kBAACnD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIqB,GAAI,GACrB,kBAACpB,EAAA,EAAD,KACE,kBAAC,GAAD,CAAcI,MAAM,WAAWwF,KAAMpE,IACrC,kBAAC,GAAD,CACEpB,MAAM,OACNwF,KACEnE,EAAWC,UACX,KACCD,EAAWE,WAAa,GACzB,IACAF,EAAWG,cACX,IACAH,EAAWI,WACX,IACAJ,EAAWK,aACX,IACAL,EAAWM,iBAKnB,kBAACnC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIqB,GAAI,GACrB,kBAAC,GAAD,CAASmC,QAASA,EAASsC,cAAeA,MAMlD,SAASvC,GAAQ3D,GACf,OACE,kBAACK,EAAA,EAAD,KACGL,EAAM4D,QACL,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,eACA,kBAACA,EAAA,EAAD,CAAWZ,UAAU,uBAArB,SACA,kBAACY,EAAA,EAAD,CAAWZ,UAAU,uBAArB,YAGJ,kBAACa,EAAA,EAAD,KACGnE,EAAM4D,QAAQxC,KAAI,SAACgD,EAAQ9C,GAAT,OACjB,kBAAC2C,EAAA,EAAD,CAAU1C,IAAKD,GACb,kBAAC4C,EAAA,EAAD,KAAYE,EAAOA,QACnB,kBAACF,EAAA,EAAD,CAAWZ,UAAU,uBAClBc,EAAOC,OAEV,kBAACH,EAAA,EAAD,CAAWZ,UAAU,uBACnB,kBAACE,EAAA,EAAD,CACEC,QAAQ,YACRlD,MAAM,UACNsD,QAAS,WACP7D,EAAMkG,cAAc9B,EAAO7F,OAJ/B,gBAgBZ,2CC7FR,IA+Ce8H,GA/CQ,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClB/B,EAAWC,cACT+B,EAAOD,EAAME,OAAbD,GAF4B,EAGK9B,YAAYqB,IAA7C5G,EAH4B,EAG5BA,QAASC,EAHmB,EAGnBA,UAAW0C,EAHQ,EAGRA,SAHQ,EAOR4C,YAAY3E,GAAhCV,EAP4B,EAO5BA,QAASM,EAPmB,EAOnBA,OAPmB,EAQM4C,mBAJb,CAC3BmE,MAAM,IAL4B,mBAQ7BjE,EAR6B,KAQdC,EARc,KAUpCiC,qBAAU,WACR,IAAMgC,EAAU,UAAMhH,GAAN,OAAeN,EAAQwF,cAAvB,YAAwC2B,GACxDhC,EAASwB,GAAWW,MACnB,CAACnC,IAEJ,IAAM2B,EAAgB,SAAA3H,GACpBuG,MAAM,GAAD,OAAIpF,GAAJ,OAAanB,GAAO,CAAEoI,OAAQ,SAChCC,MAAK,SAAS7B,GACb,OAAOA,EAASC,UAEjB4B,MAAK,SAAS7B,GACb,OAAOgB,GAAW,GAAD,OAAIrG,GAAJ,OAAaN,EAAQwF,eAArB,OAAqC2B,OAEvDK,MAAK,SAAS7B,GACbR,EAASQ,GACTtC,EAAiB,CACfgE,MAAM,QAkBd,OAAO,6BAZDjE,EAAciE,KACT,kBAAC1G,EAAD,CAAeQ,MAAM,UAAUE,MAAM,sBAE1CvB,EACK,kBAACiG,EAAA,EAAD,MAELhG,EACK,kBAACY,EAAD,CAAeQ,MAAM,QAAQE,MAAM,yBAErC,kBAAC,GAAD,iBAAcoB,EAAd,CAAwBqE,cAAeA,O,mBC7CnC,SAASW,KACtB,IADuC,EAEIvE,mBADlB,CAAEwE,WAAY,OADA,mBAEhCC,EAFgC,KAEhBC,EAFgB,KASvC,OACE,kBAAC/G,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CAAKgD,QAAS,GACZ,uBAAGC,UAAU,yBAAb,uCAGA,kBAAC2D,GAAA,EAAD,CACEC,MAAM,KACNC,KAAK,SACLnI,KAAK,aACLoI,SAhBgB,SAAAC,GAAU,IAAD,EACTA,EAAM/B,OAAtBtG,EADyB,EACzBA,KAAM4C,EADmB,EACnBA,MACdoF,EAAiB,gBAAGhI,EAAO4C,OAgBrB,kBAACvB,EAAA,EAAD,CAAK+C,UAAW,GACd,kBAACI,EAAA,EAAD,CACEC,QAAQ,YACRlD,MAAM,UACN+G,SACEP,EAAeD,WAAa,GACC,MAA7BC,EAAeD,YAGjB,kBAAC,IAAD,CACExD,UAAU,uBACVI,GAAE,qBAAgBqD,EAAeD,aAFnC,W,qDCzBRS,GAAsB,SAAAvH,GAAK,OAC/B,kBAACwH,GAAA,EAAD,CAAaC,WAAS,EAAChE,QAAQ,YAC7B,kBAACiE,GAAA,EAAD,CAAYC,QAAQ,6BAA6B3H,EAAMS,OACvD,kBAACmH,GAAA,EAAD,CACEC,eACE,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SAAS/H,EAAMgI,eAE1CC,WAAY,GACZjJ,KAAMgB,EAAMhB,KACZoI,SAAUpH,EAAMkI,sBAKP,SAASC,KACtB,IADuC,EAOK7F,mBANnB,CACvBT,SAAU,GACV+B,QAAS,GACTwE,gBAAgB,EAChBC,QAAQ,IAL6B,mBAOhCC,EAPgC,KAOhBC,EAPgB,OAQX9D,YAAY3E,GAAhCV,EAR+B,EAQ/BA,QAASM,EARsB,EAQtBA,OAEXwI,EAAoB,SAAAb,GAAU,IAAD,IACTA,EAAM/B,OAAtBtG,EADyB,EACzBA,KACJwJ,EAF6B,EACnB5G,MAED,YAAT5C,IACFwJ,EAAYA,EAAU1F,MAAM,MAE9B,IAAI2F,EACFH,EAAe1E,QAAQsB,OAAS,GAAKoD,EAAezG,SAASqD,OAAS,EACxEqD,EAAkB,gBACbD,GADY,oBAEdtJ,EAAOwJ,GAFO,iCAGEC,GAHF,MAyBnB,OACE,kBAACxI,EAAA,EAAD,CAAMC,WAAS,GACZoI,EAAeD,QACd,kBAACtI,EAAD,CAAeQ,MAAM,UAAUE,MAAM,+BAEvC,kBAACR,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CAAKqI,SAAU,GACb,uBAAGpF,UAAU,yBAAb,oBAEF,kBAACjD,EAAA,EAAD,CAAKqI,SAAU,GACb,kBAAC,GAAD,CACE1J,KAAK,WACLyB,MAAM,WACNuH,cAAc,YACdE,kBAAmBA,MAIzB,kBAACjI,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CAAKqI,SAAU,GACb,uBAAGpF,UAAU,yBAAb,kBACA,uBAAGA,UAAU,4BAAb,8EAKF,kBAACjD,EAAA,EAAD,CAAKqI,SAAU,GACb,kBAACrI,EAAA,EAAD,CAAK8C,aAAc,GACjB,kBAAC,GAAD,CACEnE,KAAK,UACLyB,MAAM,SACNuH,cAAc,WACdE,kBAAmBA,MAIxBI,EAAe1E,QAAQsB,OAAS,GAC/B,uBAAG5B,UAAU,4BAAb,mBAEGgF,EAAe1E,QAAQxC,KAAI,SAACuH,EAASrH,GAAV,OAC1B,0BAAMC,IAAKD,EAAOgC,UAAU,2BAC1B,0BAAMA,UAAU,mCACbhC,EAAQ,GAEV,KACAqH,OAKT,kBAACtI,EAAA,EAAD,CACEqI,SAAU,EACVE,WAAY,EACZC,QAAQ,OACRC,eAAe,YAEf,kBAACtF,EAAA,EAAD,CACEC,QAAQ,YACRlD,MAAM,UACN+G,SAAUgB,EAAeF,eACzBvE,QA9Ea,SAAAwD,GACrBvC,MAAM,GAAD,OAAIpF,GAAJ,OAAaN,EAAQwF,cAArB,KAAuC,CAC1C+B,OAAQ,OACRoC,KAAMC,KAAKC,UAAU,CACnBpH,SAAUyG,EAAezG,SACzB+B,QAAS0E,EAAe1E,YAGzBgD,MAAK,SAAS7B,GACb,OAAOA,EAASC,UAEjB4B,MAAK,SAAS7B,GACTA,GACFwD,EAAkB,gBAAKD,EAAN,CAAsBD,QAAQ,UA6D/C,sBCvGV,IA2Cea,GA3CH,WACV,IAAM3E,EAAWC,cADD,EAEgCC,YAAY3E,GAA3CZ,GAFD,EAERE,QAFQ,EAECF,SAASC,EAFV,EAEUA,UACpBN,GAHU,EAEqBa,OACnB,IAAIpB,GAEtBoG,qBAAU,WZcL,IAAsBC,EYbzBJ,GZayBI,EYbH9F,EAAUc,SAASpB,IZc3C,uCAAO,WAAMgG,GAAN,iBAAAM,EAAA,6DACLN,EAASjF,KADJ,kBAIoBwF,MAAMH,GAJ1B,cAIGI,EAJH,gBAKgBA,EAASC,OALzB,OAKGC,EALH,OAOHV,EAAS/E,EAAkByF,IAPxB,kDASHV,EAAS3E,KATN,0DAAP,0DYbG,CAAC2E,IAiCJ,OAAO,6BA9BDrF,EAAgB,kBAACiG,EAAA,EAAD,MAChBhG,EAEA,kBAACY,EAAD,CACEU,MAAM,QACNC,QAAQ,uBACRH,MAAM,UAKV,kBAAC4I,EAAA,EAAD,KACE,kBAAClJ,EAAA,EAAD,CAAME,MAAI,EAACmD,UAAU,aACnB,uBAAGA,UAAU,mBAAb,YAEF,kBAAC,IAAD,KACE,kBAACkC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO4D,OAAK,EAACC,KAAK,IAAIC,UAAWlE,IACjC,kBAAC,IAAD,CAAOgE,OAAK,EAACC,KAAK,aAAaC,UAAWhF,IAC1C,kBAAC,IAAD,CAAO8E,OAAK,EAACC,KAAK,iBAAiBC,UAAWjD,KAC9C,kBAAC,IAAD,CAAO+C,OAAK,EAACC,KAAK,kBAAkBC,UAAWzC,KAC/C,kBAAC,IAAD,CAAOuC,OAAK,EAACC,KAAK,kBAAkBC,UAAWnB,KAC/C,kBAAC,IAAD,CAAUzE,GAAG,W,SCzCV6F,GANKC,aAAgB,CAClCpK,QAASqK,EACT7I,UAAW8I,EACXrI,MAAOsI,KCCHC,I,MAAQC,YAAe,CAAEC,QAASP,MAExCQ,iBACE,kBAAC,IAAD,CAAUH,MAAOA,IACf,kBAAC,GAAD,OAEFI,SAASC,eAAe,W","file":"static/js/main.a1cf0b3d.chunk.js","sourcesContent":["export default class Constants {\n  getUrl() {\n    return {\n      url: \"https://polls.apiblueprint.org\"\n    };\n  }\n  getFooterLinks() {\n    return {\n      links: {\n        GitHub: \"https://github.com/donaldofndz\",\n        LinkedIn: \"https://www.linkedin.com/in/donaldo-fernandez/\",\n        HackerRank: \"https://www.hackerrank.com/donaldo_fndz?hr_r=1\",\n        CodeSignal: \"https://app.codesignal.com/profile/jose_f20\"\n      }\n    };\n  }\n  getFooterContacts() {\n    return {\n      links: {\n        \"donaldo.fndz@gmail.com\": \"mailto:donaldo.fndz@gmail.com\",\n        \"+52 (55) 48-90-58-31\": \"tel:+525548905831\"\n      }\n    };\n  }\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport Constants from \"../constants/Constants\";\n\nconst constants = new Constants();\n\nexport const initialState = {\n  loading: false,\n  hasErrors: false,\n  apiRoot: {}\n};\n\nconst apiRootSlice = createSlice({\n  name: \"apiRoot\",\n  initialState,\n  reducers: {\n    getApiRoot: state => {\n      state.loading = true;\n    },\n    getApiRootSuccess: (state, { payload }) => {\n      state.apiRoot = payload;\n      state.loading = false;\n      state.hasErrors = false;\n      state.domain = constants.getUrl().url;\n    },\n    getApiRootFailure: state => {\n      state.loading = false;\n      state.hasErrors = true;\n    }\n  }\n});\n\nexport const {\n  getApiRoot,\n  getApiRootSuccess,\n  getApiRootFailure\n} = apiRootSlice.actions;\nexport const apiRootSelector = state => state.apiRoot;\nexport default apiRootSlice.reducer;\n\nexport function fetchApiRoot(endPoint) {\n  return async dispatch => {\n    dispatch(getApiRoot());\n\n    try {\n      const response = await fetch(endPoint);\n      const data = await response.json();\n\n      dispatch(getApiRootSuccess(data));\n    } catch (error) {\n      dispatch(getApiRootFailure());\n    }\n  };\n}\n","import React from \"react\";\nimport { Grid, Box } from \"@material-ui/core\";\n\nexport default function CustomMessage(props) {\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <Box\n          bgcolor={props.color + \".main\"}\n          color={props.color + \".contrastText\"}\n          p={2}\n        >\n          <p>\n            <span>{props.title}</span>\n            {props.message}\n          </p>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const initialState = {\n  loading: false,\n  hasErrors: false,\n  questList: []\n};\n\nconst questListSlice = createSlice({\n  name: \"questList\",\n  initialState,\n  reducers: {\n    getQuestList: state => {\n      state.loading = true;\n    },\n    getQuestListEmpty: state => {\n      state.isEmpty = true;\n      state.loading = false;\n      state.hasErrors = false;\n    },\n    getQuestListSuccess: (state, { payload }) => {\n      state.questList = payload;\n      state.isEmpty = false;\n      state.loading = false;\n      state.hasErrors = false;\n    },\n    getQuestListFailure: state => {\n      state.loading = false;\n      state.hasErrors = true;\n    }\n  }\n});\n\nexport const {\n  getQuestList,\n  getQuestListEmpty,\n  getQuestListSuccess,\n  getQuestListFailure\n} = questListSlice.actions;\nexport const questListSelector = state => state.questList;\nexport default questListSlice.reducer;\n\nexport function fetchQuestList(endPoint) {\n  return async dispatch => {\n    dispatch(getQuestList());\n\n    try {\n      const response = await fetch(endPoint);\n      const data = await response.json();\n      (await data.length) > 0\n        ? dispatch(getQuestListSuccess(data))\n        : dispatch(getQuestListEmpty());\n    } catch (error) {\n      dispatch(getQuestListFailure());\n    }\n  };\n}\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Grid, Box, Button } from \"@material-ui/core/\";\nimport \"./gridOfQuestions.css\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nexport default function GridOfQuestions(props) {\n  const { questList } = props;\n\n  return (\n    <Grid container>\n      {questList.map((quest, index) => (\n        <Grid item key={index} xs={12}>\n          <Question {...quest} />\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n\nconst QuestionMainInfo = props => (\n  <Grid item xs={12} md={9}>\n    <QuestionText\n      description={\"Question\"}\n      value={props.question}\n    ></QuestionText>\n    <QuestionText\n      description={\"Date\"}\n      value={\n        props.formatDate.getDate() +\n        \"-\" +\n        (props.formatDate.getMonth() + 1) +\n        \"-\" +\n        props.formatDate.getFullYear() +\n        \" \" +\n        props.formatDate.getHours() +\n        \":\" +\n        props.formatDate.getMinutes() +\n        \":\" +\n        props.formatDate.getSeconds()\n      }\n    ></QuestionText>\n  </Grid>\n);\n\nconst Question = props => {\n  const initialQuestionState = {\n    showQuestions: false\n  };\n  const [questionState, setQuestionState] = useState(initialQuestionState);\n\n  const updateQuestionState = currentShowQuestions => {\n    setQuestionState({\n      showQuestions: currentShowQuestions\n    });\n  };\n\n  const parseISOString = s => {\n    var b = s.split(/\\D+/);\n    return new Date(Date.UTC(b[0], --b[1], b[2], b[3], b[4], b[5], b[6]));\n  };\n\n  const formatDate = parseISOString(props.published_at);\n\n  return (\n    <Box marginBottom={2} marginTop={2} padding={2} className=\"question\">\n      <Grid container>\n        <QuestionMainInfo formatDate={formatDate} question={props.question} />\n        <Grid container item xs={12} md={3} alignItems=\"center\">\n          <Button variant=\"outlined\" color=\"primary\">\n            <Link className=\"question__details\" to={props.url}>\n              Show Question Details\n            </Link>\n          </Button>\n        </Grid>\n      </Grid>\n      {questionState.showQuestions ? (\n        <Box>\n          <QuestionText description={\"Choices\"} value={\"\"}></QuestionText>\n          <Choices choices={props.choices} />\n          <Box marginTop={3}>\n            <p\n              className=\"question__link\"\n              onClick={() => updateQuestionState(false)}\n            >\n              Hide Results <span className=\"question__title--bold\"> - </span>\n            </p>\n          </Box>\n        </Box>\n      ) : (\n        <Box>\n          <p\n            className=\"question__link\"\n            onClick={() => updateQuestionState(true)}\n          >\n            Show Results <span className=\"question__title--bold\"> + </span>\n          </p>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nfunction Choices(props) {\n  return (\n    <Box className=\"question__choices\">\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Choice</TableCell>\n              <TableCell>Votes</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {props.choices.map((choice, index) => (\n              <TableRow key={index}>\n                <TableCell>{choice.choice}</TableCell>\n                <TableCell>{choice.votes}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n}\n\nfunction QuestionText(props) {\n  return (\n    <p>\n      <span className=\"question__title\">\n        <span className=\"question__title--description\">\n          {props.description}:\n        </span>\n        <span className=\"question__title--value\">{props.value}</span>\n      </span>\n    </p>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchQuestList, questListSelector } from \"../slices/questList\";\nimport { apiRootSelector } from \"../slices/apiRoot\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport CustomMessage from \"../components/CustomMessage\";\nimport GridOfQuestions from \"../components/GridOfQuestions\";\n\nexport default function ListOFQuestions() {\n  const dispatch = useDispatch();\n  const { questList, loading, isEmpty, hasErrors } = useSelector(\n    questListSelector\n  );\n\n  const { apiRoot, domain } = useSelector(apiRootSelector);\n\n  useEffect(() => {\n    dispatch(\n      fetchQuestList(`${domain}${apiRoot.questions_url}`)\n    );\n  }, [dispatch]);\n\n  const renderPage = () => {\n    if (loading) return <CircularProgress />;\n    if (hasErrors)\n      return (\n        <CustomMessage\n          title=\"Error\"\n          message=\"Something while trying to lead the List Of Questions\"\n          color=\"error\"\n        />\n      );\n    if (isEmpty)\n      return (\n        <CustomMessage\n          title=\"Info\"\n          message=\"Something while trying to lead the List Of Questions\"\n          color=\"info\"\n        />\n      );\n\n    return <GridOfQuestions questList={questList} />;\n  };\n\n  return <div>{renderPage()}</div>;\n}\n","import React from \"react\";\nimport { Grid, Box } from \"@material-ui/core\";\nimport \"./landingPage.css\";\n\nexport default function LandingPage() {\n  return (\n    <Grid container>\n      <Grid item xs={12} md={8}>\n        <Box padding={3}>\n          <p className=\"landingPage__title\">Hey I'm José Fernández</p>\n          <p className=\"landingPage__title--2\">\n            I'm a full stack developer, currently working at Globant. I love\n            programming bouth JS and NodeJS\n          </p>\n          <p className=\"landingPage__title--text\">\n            This is my react implementation for the HeyCar! FrontEnd remote task\n          </p>\n        </Box>\n      </Grid>\n      <Grid item xs={12} md={4}>\n        <Box padding={3}>\n          <div className=\"blueSquare\">\n            <p className=\"landingPage__square__title\"> Main Links </p>\n            <p className=\"landingPage__square__links\">\n              This are different links about me\n            </p>\n            <Box>\n              <p>\n                <a\n                  href=\"https://www.linkedin.com/in/donaldo-fernandez/\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  LinkedIn\n                </a>\n              </p>\n              <p>\n                <a\n                  href=\"https://github.com/donaldofndz\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  GitHub\n                </a>\n              </p>\n              <p>\n                <a\n                  href=\"https://donaldofndz.github.io/curriculumReact/\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  CVPage\n                </a>\n              </p>\n              <p>\n                <a\n                  href=\"https://github.com/donaldofndz/voteapplication\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Current Repo\n                </a>\n              </p>\n            </Box>\n          </div>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { Grid, Box } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport \"./navbar.css\";\n\nexport default function NavBar() {\n  return (\n    <Box>\n      <Grid container justify=\"space-evenly\">\n        <Grid item xs={12} md={3} className=\"navBar\">\n          <Box>\n            <Link to=\"/\">Instructions</Link>\n          </Box>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          md={3}\n          className=\"navBar__item\"\n        >\n          <Link to=\"/questions\">List Of Questions</Link>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          md={3}\n          className=\"navBar__item\"\n        >\n          <Link to=\"/SearchQuestion\">Serch Question</Link>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          md={3}\n          className=\"navBar__item\"\n        >\n          <Link to=\"/createquestion\">New Question</Link>\n        </Grid>\n      </Grid>\n      <hr className=\"navBar__line\" />\n    </Box>\n  );\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const initialState = {\n  loading: false,\n  hasErrors: false,\n  question: {}\n};\n\nconst questSlice = createSlice({\n  name: \"quest\",\n  initialState,\n  reducers: {\n    getQuest: state => {\n      state.loading = true;\n    },\n    getQuestSuccess: (state, { payload }) => {\n      state.question = payload;\n      state.loading = false;\n      state.hasErrors = false;\n    },\n    getQuestFailure: state => {\n      state.loading = false;\n      state.hasErrors = true;\n    }\n  }\n});\n\nexport const {\n  getQuest,\n  getQuestSuccess,\n  getQuestFailure\n} = questSlice.actions;\nexport const questSelector = state => state.quest;\nexport default questSlice.reducer;\n\nexport function fetchQuest(endPoint) {\n  return async dispatch => {\n    dispatch(getQuest());\n    try {\n      const response = await fetch(endPoint);\n      const data = await response.json();\n      dispatch(getQuestSuccess(data));\n    } catch (error) {\n      dispatch(getQuestFailure());\n    }\n  };\n}\n","import React from \"react\";\nimport { Grid, Box, Button } from \"@material-ui/core\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport './question.css'\n\nconst QuestionInfo = props => (\n  <div>\n    <span\n      className=\"question__info__title\"\n    >\n      {props.title}:\n    </span>\n    <p className=\"question__info__title--2\">\n      {props.info}\n    </p>\n  </div>\n);\n\nexport default function Question(props) {\n  const { question, published_at, choices, voteForChoice } = props;\n\n  const parseISOString = s => {\n    if (s === undefined) return new Date();\n    var b = s.split(/\\D+/);\n    return new Date(Date.UTC(b[0], --b[1], b[2], b[3], b[4], b[5], b[6]));\n  };\n\n  const formatDate = parseISOString(published_at);\n\n  return (\n    <Grid container style={{ marginTop: \"3em\" }}>\n      <Grid item xs={12} md={5}>\n        <Box>\n          <QuestionInfo title=\"Question\" info={question}></QuestionInfo>\n          <QuestionInfo\n            title=\"Date\"\n            info={\n              formatDate.getDate() +\n              \"-\" +\n              (formatDate.getMonth() + 1) +\n              \"-\" +\n              formatDate.getFullYear() +\n              \" \" +\n              formatDate.getHours() +\n              \":\" +\n              formatDate.getMinutes() +\n              \":\" +\n              formatDate.getSeconds()\n            }\n          ></QuestionInfo>\n        </Box>\n      </Grid>\n      <Grid item xs={12} md={7}>\n        <Choices choices={choices} voteForChoice={voteForChoice} />\n      </Grid>\n    </Grid>\n  );\n}\n\nfunction Choices(props) {\n  return (\n    <Box>\n      {props.choices ? (\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Choice</TableCell>\n                <TableCell className=\"question__tablecell\">Votes</TableCell>\n                <TableCell className=\"question__tablecell\">Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {props.choices.map((choice, index) => (\n                <TableRow key={index}>\n                  <TableCell>{choice.choice}</TableCell>\n                  <TableCell className=\"question__tablecell\">\n                    {choice.votes}\n                  </TableCell>\n                  <TableCell className=\"question__tablecell\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={() => {\n                        props.voteForChoice(choice.url);\n                      }}\n                    >\n                      Vote\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      ) : (\n        <p>No data yet</p>\n      )}\n    </Box>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchQuest, questSelector } from \"../slices/quest\";\nimport { apiRootSelector } from \"../slices/apiRoot\";\nimport Question from \"../components/Question\";\nimport CustomMessage from \"../components/CustomMessage\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst SingleQuestion = ({ match }) => {\n  const dispatch = useDispatch();\n  const { id } = match.params;\n  const { loading, hasErrors, question } = useSelector(questSelector);\n  const initialQuestionState = {\n    vote: false\n  };\n  const { apiRoot, domain } = useSelector(apiRootSelector);\n  const [questionState, setQuestionState] = useState(initialQuestionState);\n\n  useEffect(() => {\n    const urlRequest = `${domain}${apiRoot.questions_url}/${id}`;\n    dispatch(fetchQuest(urlRequest));\n  }, [dispatch]);\n\n  const voteForChoice = url => {\n    fetch(`${domain}${url}`, { method: \"POST\" })\n      .then(function(response) {\n        return response.json();\n      })\n      .then(function(response) {\n        return fetchQuest(`${domain}${apiRoot.questions_url}${id}`);\n      })\n      .then(function(response) {\n        dispatch(response);\n        setQuestionState({\n          vote: true\n        });\n      });\n  };\n\n  const renderSingleQuestion = () => {\n    if (questionState.vote) {\n      return <CustomMessage color=\"success\" title=\"Thanks for voting\" />;\n    }\n    if (loading) {\n      return <CircularProgress />;\n    }\n    if (hasErrors) {\n      return <CustomMessage color=\"error\" title=\"There was a en error\" />;\n    }\n    return <Question {...question} voteForChoice={voteForChoice} />;\n  };\n\n  return <div>{renderSingleQuestion()}</div>;\n};\n\nexport default SingleQuestion;\n","import React, { useState } from \"react\";\nimport { Grid, Box, TextField, Button } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\nexport default function SearchQuestion() {\n  const initialFormState = { idQuestion: null };\n  const [searchQuestion, setSearchQueston] = useState(initialFormState);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setSearchQueston({ [name]: value });\n  };\n\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <Box padding={3}>\n          <p className=\"searchQuestion__title\">\n            Do you know the ID of the question?\n          </p>\n          <TextField\n            label=\"ID\"\n            type=\"number\"\n            name=\"idQuestion\"\n            onChange={handleInputChange}\n          />\n          <Box marginTop={5}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={\n                searchQuestion.idQuestion < 0 ||\n                searchQuestion.idQuestion == null\n              }\n            >\n              <Link\n                className=\"searchQuestion__link\"\n                to={`/questions/${searchQuestion.idQuestion}`}\n              >\n                Ir\n              </Link>\n            </Button>\n          </Box>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Grid, Box, Button } from \"@material-ui/core\";\nimport { apiRootSelector } from \"../slices/apiRoot\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport CustomMessage from \"../components/CustomMessage\";\n\nconst CreateQuestionInput = props => (\n  <FormControl fullWidth variant=\"outlined\">\n    <InputLabel htmlFor=\"outlined-adornment-amount\">{props.title}</InputLabel>\n    <OutlinedInput\n      startAdornment={\n        <InputAdornment position=\"start\">{props.textAdornment}</InputAdornment>\n      }\n      labelWidth={60}\n      name={props.name}\n      onChange={props.handleInputChange}\n    />\n  </FormControl>\n);\n\nexport default function CreateQuestion() {\n  const initialFormState = {\n    question: \"\",\n    choices: [],\n    disabledSubmit: true,\n    submit: false\n  };\n  const [createQuestion, setCreateQuestion] = useState(initialFormState);\n  const { apiRoot, domain } = useSelector(apiRootSelector);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    let editValue = value;\n    if (name === \"choices\") {\n      editValue = editValue.split(\",\");\n    }\n    let valueDisabled =\n      createQuestion.choices.length > 1 && createQuestion.question.length > 0;\n    setCreateQuestion({\n      ...createQuestion,\n      [name]: editValue,\n      disabledSubmit: !valueDisabled\n    });\n  };\n\n  const submitQuestion = event => {\n    fetch(`${domain}${apiRoot.questions_url}?`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        question: createQuestion.question,\n        choices: createQuestion.choices\n      })\n    })\n      .then(function(response) {\n        return response.json();\n      })\n      .then(function(response) {\n        if (response) {\n          setCreateQuestion({ ...createQuestion, submit: true });\n        }\n      });\n  };\n\n  return (\n    <Grid container>\n      {createQuestion.submit && (\n        <CustomMessage color=\"success\" title=\"Your question was created!\" />\n      )}\n      <Grid item xs={12}>\n        <Box paddingX={3}>\n          <p className=\"createQuestion__title\">Create Question</p>\n        </Box>\n        <Box paddingX={3}>\n          <CreateQuestionInput\n            name=\"question\"\n            title=\"Question\"\n            textAdornment=\"Question:\"\n            handleInputChange={handleInputChange}\n          />\n        </Box>\n      </Grid>\n      <Grid item xs={12}>\n        <Box paddingX={3}>\n          <p className=\"createQuestion__title\">Create Choices</p>\n          <p className=\"createQuestion__title--2\">\n            Separete with commas the differents choices, for example: pytho,\n            ruby, JS\n          </p>\n        </Box>\n        <Box paddingX={3}>\n          <Box marginBottom={3}>\n            <CreateQuestionInput\n              name=\"choices\"\n              title=\"Choice\"\n              textAdornment=\"Choices:\"\n              handleInputChange={handleInputChange}\n            />\n          </Box>\n        </Box>\n        {createQuestion.choices.length > 1 && (\n          <p className=\"createQuestion__title--2\">\n            Current Choices:\n            {createQuestion.choices.map((element, index) => (\n              <span key={index} className=\"createQuestion__choices\">\n                <span className=\"createQuestion__choices--inside\">\n                  {index + 1}\n                </span>\n                {\": \"}\n                {element}\n              </span>\n            ))}\n          </p>\n        )}\n        <Box\n          paddingX={3}\n          paddingTop={3}\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n        >\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={createQuestion.disabledSubmit}\n            onClick={submitQuestion}\n          >\n            Create Question\n          </Button>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchApiRoot, apiRootSelector } from \"./slices/apiRoot\";\nimport { Grid, Container } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport CustomMessage from \"./components/CustomMessage\";\nimport ListOFQuestions from \"./pages/ListOfQuestions\";\nimport LandingPage from \"./pages/LandingPage\";\nimport NavBar from \"./components/Navbar\";\nimport SingleQuestion from \"./pages/SingleQuestion\";\nimport SearchQuestion from \"./pages/SearchQuestion\";\nimport CreateQuestion from \"./pages/CreateQuestion\";\nimport Constants from \"./constants/Constants\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const { apiRoot, loading, hasErrors, domain } = useSelector(apiRootSelector);\n  const constants = new Constants();\n\n  useEffect(() => {\n    dispatch(fetchApiRoot(constants.getUrl().url));\n  }, [dispatch]);\n\n  const renderPage = () => {\n    if (loading) return <CircularProgress />;\n    if (hasErrors)\n      return (\n        <CustomMessage\n          title=\"Error\"\n          message=\"Something went wrong\"\n          color=\"error\"\n        />\n      );\n\n    return (\n      <Container>\n        <Grid item className=\"titleMain\">\n          <p className=\"titleMain__text\">VoteApp</p>\n        </Grid>\n        <Router>\n          <NavBar />\n          <Switch>\n            <Route exact path=\"/\" component={LandingPage} />\n            <Route exact path=\"/questions\" component={ListOFQuestions} />\n            <Route exact path=\"/questions/:id\" component={SingleQuestion} />\n            <Route exact path=\"/searchquestion\" component={SearchQuestion} />\n            <Route exact path=\"/createquestion\" component={CreateQuestion} />\n            <Redirect to=\"/\" />\n          </Switch>\n        </Router>\n      </Container>\n    );\n  };\n\n  return <div>{renderPage()}</div>;\n};\n\nexport default App;\n","import { combineReducers } from \"redux\";\n\nimport apiRootReducer from \"./apiRoot\";\nimport questListReducer from \"./questList\";\nimport questReducer from \"./quest\";\n\nconst rootReducer = combineReducers({\n  apiRoot: apiRootReducer,\n  questList: questListReducer,\n  quest: questReducer,\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App\";\nimport rootReducer from \"./slices\";\n\nimport \"./index.css\";\n\nconst store = configureStore({ reducer: rootReducer });\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}